/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package shape;

import java.io.File;
import java.util.Collection;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import org.semanticweb.owlapi.apibinding.OWLManager;
import org.semanticweb.owlapi.model.AddAxiom;
import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLAxiom;
import org.semanticweb.owlapi.model.OWLDataFactory;
import org.semanticweb.owlapi.model.OWLDataProperty;
import org.semanticweb.owlapi.model.OWLLiteral;
import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

import org.semanticweb.owlapi.model.OWLOntologyCreationException;
import org.semanticweb.owlapi.model.OWLOntologyManager;
import org.semanticweb.owlapi.model.RemoveAxiom;
import org.semanticweb.owlapi.reasoner.Node;
import org.semanticweb.owlapi.reasoner.NodeSet;

import org.semanticweb.owlapi.reasoner.OWLReasoner;
import org.semanticweb.owlapi.reasoner.OWLReasonerFactory;
import org.semanticweb.owlapi.reasoner.structural.StructuralReasonerFactory;



/**
 *
 * @author Home
 */
public class Main extends javax.swing.JFrame {
    private OWLOntology ontology;
    private OWLReasoner reasoner;
     private OWLOntologyManager manager;
    /**
     * Creates new form Main
     */
    public Main() throws OWLOntologyCreationException {
        super("Math ITS - Area Calculator");
        
            File owlFile = new File("C:\\area.owl");
            
            if (!owlFile.exists()) {
                JOptionPane.showMessageDialog(null, 
                    "OWL file not found at: " + owlFile.getAbsolutePath(),
                    "File Error", 
                    JOptionPane.ERROR_MESSAGE);
                return;
            }

         this.manager = OWLManager.createOWLOntologyManager();
        OWLOntologyManager manager = OWLManager.createOWLOntologyManager();
        this.ontology = manager.loadOntologyFromOntologyDocument(
            IRI.create(owlFile.toURI().toString()));
        OWLReasonerFactory reasonerFactory = new StructuralReasonerFactory();
        this.reasoner = reasonerFactory.createReasoner(ontology);
        
        
        initComponents();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Triangle", "Circle", "Rectangle" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Result: ");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Base");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Height");

        jButton1.setText("Calculate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(39, 39, 39)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:

         String selectedItem = (String) jComboBox1.getSelectedItem();
                
                // Perform different actions based on selection
                switch(selectedItem) {
                    case "Triangle":
                        jLabel2.setText("Base");
                        jLabel3.setText("Height");
                        jLabel3.setVisible(true);
                        jTextField2.setVisible(true);
                        break;
                    case "Rectangle":
                        jLabel2.setText("Length");
                        jLabel3.setText("Width");
                        jLabel3.setVisible(true);
                        jTextField2.setVisible(true);
                        break;
                    case "Circle":
                        jLabel2.setText("Radius");
                        jLabel3.setVisible(false);
                        jTextField2.setVisible(false);
                        break;
                    default:
                        jLabel1.setText("Please select an option");
                }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            OWLDataFactory df = ontology.getOWLOntologyManager().getOWLDataFactory();
            OWLNamedIndividual shape = null;
            String shapeType = (String) jComboBox1.getSelectedItem();i(); 

            
            // Create temporary individual based on selected shape
            switch(shapeType) {
                case "Triangle":
                    double base = Double.parseDouble(jTextField1.getText());
                    double height = Double.parseDouble(jTextField2.getText());
                    shape = df.getOWLNamedIndividual(IRI.create("#tempTriangle"));

                    // Add triangle properties
                    OWLDataProperty hasBase = df.getOWLDataProperty(IRI.create("#hasBase"));
                    OWLDataProperty hasHeight = df.getOWLDataProperty(IRI.create("#hasHeight"));

                    OWLAxiom declAxiom = df.getOWLDeclarationAxiom(shape);
                    OWLAxiom baseAxiom = df.getOWLDataPropertyAssertionAxiom(hasBase, shape, df.getOWLLiteral(base));
                    OWLAxiom heightAxiom = df.getOWLDataPropertyAssertionAxiom(hasHeight, shape, df.getOWLLiteral(height));

                    manager.applyChange(new AddAxiom(ontology, declAxiom));
                    manager.applyChange(new AddAxiom(ontology, baseAxiom));
                    manager.applyChange(new AddAxiom(ontology, heightAxiom));
                    break;

                case "Rectangle":
                    double length = Double.parseDouble(jTextField1.getText());
                    double width = Double.parseDouble(jTextField2.getText());
                    shape = df.getOWLNamedIndividual(IRI.create("#tempRectangle"));

                    // Add rectangle properties (using same hasBase/hasHeight properties)
                    OWLDataProperty hasLength = df.getOWLDataProperty(IRI.create("#hasBase")); // Reusing property
                    OWLDataProperty hasWidth = df.getOWLDataProperty(IRI.create("#hasHeight")); // Reusing property

                    OWLAxiom declAxiom1 = df.getOWLDeclarationAxiom(shape);
                    OWLAxiom lengthAxiom = df.getOWLDataPropertyAssertionAxiom(hasLength, shape, df.getOWLLiteral(length));
                    OWLAxiom widthAxiom = df.getOWLDataPropertyAssertionAxiom(hasWidth, shape, df.getOWLLiteral(width));

                    manager.applyChange(new AddAxiom(ontology, declAxiom1));
                    manager.applyChange(new AddAxiom(ontology, lengthAxiom));
                    manager.applyChange(new AddAxiom(ontology, widthAxiom));
                    break;

                case "Circle":
                    double radius = Double.parseDouble(jTextField1.getText());
                    shape = df.getOWLNamedIndividual(IRI.create("#tempCircle"));

                    // Add circle property
                    OWLDataProperty hasRadius = df.getOWLDataProperty(IRI.create("#hasRadius"));

                    OWLAxiom declAxiom2 = df.getOWLDeclarationAxiom(shape);
                    OWLAxiom radiusAxiom = df.getOWLDataPropertyAssertionAxiom(hasRadius, shape, df.getOWLLiteral(radius));

                    manager.applyChange(new AddAxiom(ontology, declAxiom2));
                    manager.applyChange(new AddAxiom(ontology, radiusAxiom));
                    break;
            }

            // Recompute inferences for all cases
            reasoner.flush();

            // Get computed area (same for all shapes)
            OWLDataProperty hasArea = df.getOWLDataProperty(IRI.create("#hasArea"));
            Set<OWLLiteral> valueNodes = reasoner.getDataPropertyValues(shape, hasArea);

            if (!valueNodes.isEmpty()) {
                jLabel4.setText("Computed Area: " + valueNodes.iterator().next().getLiteral());
            } else {
                jLabel4.setText("No area computed - check rules");
            }
            
            double a = Double.parseDouble(jTextField1.getText());
            double b = Double.parseDouble(jTextField2.getText());
            if(a < 0 || b < 0){
                jLabel4.setVisible(true);
                jLabel4.setText("Negative Values Are Not Allowed");
            }
                

            // Clean up temporary individual
            manager.removeAxioms(ontology, ontology.getAxioms(shape));

        } catch (Exception ex) {
            jLabel1.setText("Error: " + ex.getMessage());
        }
       


        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
       public void i(){
           jLabel4.setVisible(false);
           String selectedItem = (String) jComboBox1.getSelectedItem();
                
                // Perform different actions based on selection
                switch(selectedItem) {
                    case "Triangle":
                        double base = Double.parseDouble(jTextField1.getText());
                        double height = Double.parseDouble(jTextField2.getText());
                        double area = 0.5 * base * height;
                        jLabel1.setText("Area of a Triangle is: "+area);
                        break;
                    case "Rectangle":
                        double length = Double.parseDouble(jTextField1.getText());
                        double width = Double.parseDouble(jTextField2.getText());
                        double areaRec = length * width;
                        jLabel1.setText("Area of a rectangle is: "+areaRec);
                        break;
                    case "Circle":
                        double radius = Double.parseDouble(jTextField1.getText());
                       
                        double result = Math.PI * radius * radius;
                        jLabel1.setText("Radius is: "+result);
                        break;
                    default:
                        jLabel1.setText("Please select an option");
                }
             
        }
    /**
     * @param args the command line arguments
     */
       
       
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    
                    new Main().setVisible(true);
                    
                } catch (OWLOntologyCreationException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
     
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
